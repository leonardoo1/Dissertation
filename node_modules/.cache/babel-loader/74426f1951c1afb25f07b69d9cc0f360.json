{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Dissertation\\\\src\\\\Components\\\\home-page.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputBase from '@material-ui/core/InputBase';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Card from '@material-ui/core/Card';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport * as utils from \"./utils\";\nimport \"./home-page.css\";\nimport style from \"./home-page.css\";\n\nconst HomePage = () => {\n  _s();\n\n  const [flag, forceUpdate] = utils.useForceUpdate();\n  const [fiat, setFiat] = useState('USD');\n  const [crypto, setCrypto] = useState('BTC');\n  const [value, setValue] = useState('');\n  const [result, setResult] = useState('');\n  const [fiatToCrypto, setFiatToCrypto] = useState(true);\n  const [fiatValue, setFiatValue] = useState(0);\n  const [cryptoValue, setCryptoValue] = useState(0);\n  const [exchangeRates, setExchangeRates] = useState(null);\n  useEffect(() => {\n    loadCrypt();\n  }, []);\n  useEffect(() => {\n    if (exchangeRates) {\n      countResult();\n    }\n  }, [value, result, fiat, crypto]);\n\n  const loadCrypt = () => {\n    axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,XRP,EOS,BCH,LTC,TRX,LINK,BSV,OKB,ETC,BNB,MOF,VET,NEO,XMR,KAVA,ONT,USDC,ADA&tsyms=USD,EUR,RUB,JPY,GBP,AUD,CAD,CHF,CNY,ZAR,SEK,NOK,SGD,PLN,TRY,INR,CZK&api_key=592432a04e855b5ee3900db3de717330cc5d8799a7fecdea6e49223a12bff4c6').then(response => {\n      console.log('Axios returned', response.data);\n      setExchangeRates(response.data);\n      forceUpdate();\n    });\n  };\n\n  const countResult = () => {\n    let f = fiat;\n    let c = crypto;\n    let v = value;\n    let r = result;\n    let re;\n\n    if (fiatToCrypto) {\n      re = v / exchangeRates[c][f];\n      setResult(re);\n      putFocusFiat();\n    } else {\n      re = r * exchangeRates[c][f];\n      setValue(re);\n      putFocusCrypto();\n    }\n  };\n\n  const handle = event => {\n    let value = event.target.value;\n\n    if (/^\\d*\\.?\\d*$/.test(value)) {\n      setValue(event.target.value); // forceUpdate();\n    }\n  };\n\n  const handleCrypto = event => {\n    let value = event.target.value;\n\n    if (/^\\d*\\.?\\d*$/.test(value)) {\n      setResult(event.target.value); // forceUpdate();\n    }\n  };\n\n  const rotate = event => {\n    let temp = !fiatToCrypto;\n    setFiatToCrypto(temp);\n    setValue('');\n    setResult(''); // forceUpdate();\n  };\n\n  const handleChangeFiat = (event, value) => {\n    setFiatValue(value);\n    forceUpdate();\n\n    if (value == 0) {\n      setFiat(\"USD\");\n    }\n\n    if (value == 1) {\n      setFiat(\"EUR\");\n    }\n\n    if (value == 2) {\n      setFiat(\"RUB\");\n    }\n  };\n\n  const handleChangeCrypto = (event, value) => {\n    setCryptoValue(value); // forceUpdate();\n\n    if (value == 0) {\n      setCrypto(\"BTC\");\n    }\n\n    if (value == 1) {\n      setCrypto(\"ETH\");\n    }\n  };\n\n  const putFocusFiat = () => {\n    document.getElementById(\"fiat-input\").focus();\n  };\n\n  const putFocusCrypto = () => {\n    document.getElementById(\"crypto-input\").focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !exchangeRates ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.loading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.main,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: style.convertcard,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 0,\n          className: style.content,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            md: 6,\n            className: !fiatToCrypto ? `${style.borderoutline} ${style.result}` : `${style.borderoutline} ${style.source}`,\n            onClick: putFocusFiat,\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              className: style.tab,\n              value: fiatValue,\n              onChange: handleChangeFiat,\n              indicatorColor: \"primary\",\n              textColor: \"primary\",\n              variant: \"fullWidth\",\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \"USD\",\n                className: style.tabElement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"EUR\",\n                className: style.tabElement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"RUB\",\n                className: style.tabElement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: style.inputForm,\n              disabled: !fiatToCrypto,\n              children: /*#__PURE__*/_jsxDEV(InputBase, {\n                id: \"fiat-input\",\n                value: value,\n                className: style.bootstrapRoot,\n                onChange: handle,\n                placeholder: \"0  \" + fiat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Reverse Convertion\",\n            \"aria-label\": \"Reverse Convertion\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.currSwapper,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: rotate,\n                className: fiatToCrypto ? `${style.icon}` : `${style.iconback}`,\n                children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            md: 6,\n            className: fiatToCrypto ? `${style.result}` : `${style.source}`,\n            onClick: putFocusCrypto,\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              className: style.tab,\n              value: cryptoValue,\n              onChange: handleChangeCrypto,\n              indicatorColor: \"primary\",\n              textColor: \"primary\",\n              variant: \"fullWidth\",\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \"BTC\",\n                className: style.tabElement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"ETH\",\n                className: style.tabElement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              disabled: fiatToCrypto,\n              children: /*#__PURE__*/_jsxDEV(InputBase, {\n                id: \"crypto-input\",\n                value: result,\n                classes: {\n                  root: style.bootstrapRoot,\n                  input: style.bootstrapInput\n                },\n                onChange: handleCrypto,\n                placeholder: \"0  \" + crypto\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"ZsFQ13goLlvTSjSncvEXtyXfSsE=\", false, function () {\n  return [utils.useForceUpdate];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Dissertation/src/Components/home-page.js"],"names":["React","Fragment","useEffect","useState","axios","CircularProgress","FormControl","Input","InputBase","Grid","IconButton","ArrowBackIcon","Tabs","Tab","Card","Tooltip","utils","style","HomePage","flag","forceUpdate","useForceUpdate","fiat","setFiat","crypto","setCrypto","value","setValue","result","setResult","fiatToCrypto","setFiatToCrypto","fiatValue","setFiatValue","cryptoValue","setCryptoValue","exchangeRates","setExchangeRates","loadCrypt","countResult","get","then","response","console","log","data","f","c","v","r","re","putFocusFiat","putFocusCrypto","handle","event","target","test","handleCrypto","rotate","temp","handleChangeFiat","handleChangeCrypto","document","getElementById","focus","loading","main","convertcard","content","borderoutline","source","tab","tabElement","inputForm","bootstrapRoot","currSwapper","icon","iconback","root","input","bootstrapInput"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Card from '@material-ui/core/Card';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport * as utils from \"./utils\";\r\nimport \"./home-page.css\";\r\n\r\n\r\nimport style from \"./home-page.css\"\r\n\r\nconst HomePage = () => {\r\n  const [flag, forceUpdate] = utils.useForceUpdate();\r\n\r\n  const [fiat, setFiat] = useState('USD');\r\n  const [crypto, setCrypto] = useState('BTC');\r\n  const [value, setValue] = useState('');\r\n  const [result, setResult] = useState('');\r\n  const [fiatToCrypto, setFiatToCrypto] = useState(true);\r\n  const [fiatValue, setFiatValue] = useState(0);\r\n  const [cryptoValue, setCryptoValue] = useState(0);\r\n\r\n\r\n  const [exchangeRates, setExchangeRates] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadCrypt();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (exchangeRates) {\r\n      countResult();\r\n    }\r\n  }, [value, result, fiat, crypto])\r\n\r\n\r\n  const loadCrypt = () => {\r\n    axios\r\n        .get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,XRP,EOS,BCH,LTC,TRX,LINK,BSV,OKB,ETC,BNB,MOF,VET,NEO,XMR,KAVA,ONT,USDC,ADA&tsyms=USD,EUR,RUB,JPY,GBP,AUD,CAD,CHF,CNY,ZAR,SEK,NOK,SGD,PLN,TRY,INR,CZK&api_key=592432a04e855b5ee3900db3de717330cc5d8799a7fecdea6e49223a12bff4c6')\r\n        .then(response => {\r\n            console.log('Axios returned', response.data)\r\n            setExchangeRates(response.data);\r\n            forceUpdate();\r\n        });\r\n  }\r\n\r\n  const countResult = () => {\r\n    let f = fiat;\r\n    let c = crypto;\r\n    let v = value;\r\n    let r = result;\r\n    let re;\r\n    if (fiatToCrypto) {\r\n      re = v / exchangeRates[c][f];\r\n      setResult(re);\r\n      putFocusFiat();\r\n    } else {\r\n      re = r * exchangeRates[c][f];\r\n      setValue(re);\r\n      putFocusCrypto();\r\n    }\r\n\r\n\r\n  };\r\n\r\n  const handle = event => {\r\n    let value = event.target.value;\r\n    if (/^\\d*\\.?\\d*$/.test(value)) {\r\n      setValue(event.target.value);\r\n      // forceUpdate();\r\n    }\r\n\r\n  };\r\n\r\n  const handleCrypto = event => {\r\n    let value = event.target.value;\r\n    if (/^\\d*\\.?\\d*$/.test(value)) {\r\n      setResult(event.target.value);\r\n      // forceUpdate();\r\n    }\r\n  };\r\n\r\n  const rotate = event => {\r\n    let temp = !fiatToCrypto;\r\n    setFiatToCrypto(temp);\r\n    setValue('');\r\n    setResult('');\r\n    // forceUpdate();\r\n  }\r\n\r\n  const handleChangeFiat = (event, value) => {\r\n    setFiatValue(value);\r\n    forceUpdate();\r\n    if (value == 0) {\r\n      setFiat(\"USD\");\r\n    }\r\n    if (value == 1) {\r\n      setFiat(\"EUR\");\r\n    }\r\n    if (value == 2) {\r\n      setFiat(\"RUB\");\r\n    }\r\n  };\r\n\r\n  const handleChangeCrypto = (event, value) => {\r\n    setCryptoValue(value);\r\n    // forceUpdate();\r\n    if (value == 0) {\r\n      setCrypto(\"BTC\");\r\n    }\r\n    if (value == 1) {\r\n      setCrypto(\"ETH\");\r\n    }\r\n  };\r\n\r\n  const putFocusFiat = () => {\r\n    document.getElementById(\"fiat-input\").focus();\r\n  }\r\n\r\n  const putFocusCrypto = () => {\r\n    document.getElementById(\"crypto-input\").focus();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!exchangeRates ?\r\n        <div className={style.loading}>\r\n          <CircularProgress />\r\n        </div>\r\n        :\r\n        <div className={style.main}>\r\n          <Card className={style.convertcard}>\r\n          <Grid container spacing={0} className={style.content}>\r\n            <Grid item xs={6} md={6} className={!fiatToCrypto ? `${style.borderoutline} ${style.result}`: `${style.borderoutline} ${style.source}`} onClick={putFocusFiat}>\r\n\r\n              <Tabs\r\n                className={style.tab}\r\n                value={fiatValue}\r\n                onChange={handleChangeFiat}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"fullWidth\"\r\n              >\r\n                <Tab label=\"USD\" className={style.tabElement}/>\r\n                <Tab label=\"EUR\" className={style.tabElement}/>\r\n                <Tab label=\"RUB\" className={style.tabElement}/>\r\n              </Tabs>\r\n\r\n            <FormControl className={style.inputForm} disabled={!fiatToCrypto}>\r\n              <InputBase\r\n                id=\"fiat-input\"\r\n                value={value}\r\n                className={style.bootstrapRoot}\r\n                onChange={handle}\r\n                placeholder = {\"0  \" + fiat}\r\n              />\r\n            </FormControl>\r\n            </Grid>\r\n\r\n            <Tooltip title=\"Reverse Convertion\" aria-label=\"Reverse Convertion\">\r\n              <div className={style.currSwapper} >\r\n                <IconButton onClick={rotate} className={fiatToCrypto ? `${style.icon}` : `${style.iconback}`}>\r\n                  <ArrowBackIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Tooltip>\r\n\r\n            <Grid item xs={6} md={6} className={fiatToCrypto ? `${style.result}`: `${style.source}`} onClick={putFocusCrypto}>\r\n            <Tabs\r\n              className={style.tab}\r\n              value={cryptoValue}\r\n              onChange={handleChangeCrypto}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n            >\r\n              <Tab label=\"BTC\" className={style.tabElement}/>\r\n              <Tab label=\"ETH\" className={style.tabElement}/>\r\n            </Tabs>\r\n\r\n            <FormControl disabled={fiatToCrypto}>\r\n              <InputBase\r\n                id=\"crypto-input\"\r\n                value={result}\r\n                classes={{\r\n                  root: style.bootstrapRoot,\r\n                  input: style.bootstrapInput,\r\n                }}\r\n\r\n                onChange={handleCrypto}\r\n                placeholder = {\"0  \" + crypto}\r\n              />\r\n            </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          </Card>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}